Index: src/frontend/src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\n//Adding the above import solves the problems described below:\r\n//  Line 6:   'React' must be in scope when using JSX  react/react-in-jsx-scope\r\n//   Line 7:  'React' must be in scope when using JSX  react/react-in-jsx-scope\r\n\r\nimport './App.css';\r\nimport {useState, useEffect} from 'react';\r\nimport {deleteStudent, getAllStudents} from \"./client\";\r\nimport {\r\n    Avatar,\r\n    Badge,\r\n    Breadcrumb, Button, Empty,\r\n    Layout,\r\n    Menu, Spin,\r\n    Table, Tag,\r\n    Radio, Image\r\n} from 'antd';\r\n\r\nimport {\r\n    DesktopOutlined, DownloadOutlined,\r\n    FileOutlined,\r\n    LoadingOutlined,\r\n    PieChartOutlined, PlusOutlined,\r\n    TeamOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport { message, Popconfirm } from 'antd';\r\nimport StudentDrawerForm from \"./StudentDrawerForm\";\r\nimport {errorNotification, successNotification} from \"./Notification\";\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst {SubMenu} =Menu;\r\nconst TheAvatar = ({name}) => {\r\n    let trim = name.trim();\r\n    if(trim.length===0) {\r\n        return <Avatar icon={<UserOutlined/>} />\r\n    }\r\n    const split = trim.split(\" \");\r\n    if(split.length===1) {\r\n        return  <Avatar>{name.charAt(0)}</Avatar>\r\n    }\r\n    return <Avatar>\r\n        {`${name.charAt(0)}${name.charAt(name.length-1)}`}\r\n    </Avatar>\r\n}\r\nconst removeStudent = (studentId, callback) => {\r\n    deleteStudent(studentId).then(() => {\r\n        deleteStudent(7889798).then(() => {\r\n            successNotification(\"Student deleted\", `Student with ${studentId} was deleted`);\r\n            callback();\r\n        });\r\n    }).catch(err => {\r\n        err.response.json().then(res => {\r\n            console.log(res);\r\n            errorNotification(\r\n                \"There was an issue\",\r\n                `${res.message} [${res.status}] [${res.error}]`\r\n            )\r\n        });\r\n    })\r\n}\r\n\r\nconst columns = fetchStudents => [\r\n    {\r\n        title: 'Avatar',\r\n        dataIndex: 'avatar',\r\n        key: 'avatar',\r\n        render: (text, student) => <TheAvatar name={student.name}/>\r\n\r\n    },\r\n    {\r\n        title: 'Id',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n    },\r\n    {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n        key: 'gender',\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render:(text, student)=>\r\n        <Radio.Group>\r\n            <Popconfirm\r\n                placement='topRight'\r\n                title= {`Are you sure to delete ${student.name}?`}\r\n                onConfirm={() => removeStudent(student.id, fetchStudents)}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\" >\r\n                <Radio.Button value=\"small\">Delete</Radio.Button>\r\n             </Popconfirm>\r\n            <Radio.Button value=\"small\">Edit</Radio.Button>\r\n        </Radio.Group>\r\n    },\r\n];\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\nfunction App() {\r\n    const [students, setStudents] = useState([]);\r\n    const [collapsed, setCollapsed] = useState(false);\r\n    const [fetching, setFetching] = useState(true);\r\n    const [showDrawer, setShowDrawer] = useState(false);\r\n\r\n    const fetchStudents = () =>\r\n        getAllStudents()\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setStudents(data);\r\n                setFetching(false);\r\n            }).catch(err => {\r\n                console.log(err.response)\r\n            err.response.json().then(res => {\r\n                console.log(res);\r\n                errorNotification(\r\n                    \"There was an issue\",\r\n                    `${res.message} [statusCode:${res.status}] [${res.error}]`\r\n                )\r\n\r\n            });\r\n    }).finally(()=> setFetching(false))\r\n\r\n    useEffect(()=> {\r\n        console.log(\"component is mounted\");\r\n        fetchStudents();\r\n\r\n    }, []);\r\n\r\n    const renderStudents = () => {\r\n        if(fetching) {\r\n            return <Spin indicator={antIcon}/>\r\n        }\r\n        if (students.length<=0) {\r\n            return <>\r\n                <Button\r\n                    onClick={() => setShowDrawer(!showDrawer)}\r\n                    type=\"primary\" shape=\"round\" icon={<PlusOutlined/>} size=\"small\">\r\n                    Add New Student\r\n                </Button>\r\n                <StudentDrawerForm\r\n                    showDrawer={showDrawer}\r\n                    setShowDrawer={setShowDrawer}\r\n                    fetchStudents={fetchStudents}\r\n                />\r\n                <Empty/>\r\n            </>\r\n        }\r\n        return <>\r\n            <StudentDrawerForm\r\n                showDrawer={showDrawer}\r\n                setShowDrawer={setShowDrawer}\r\n                fetchStudents = {fetchStudents}\r\n\r\n            />\r\n            <Table\r\n            dataSource={students}\r\n            columns={columns(fetchStudents)}\r\n            bordered\r\n            title={() =>\r\n                <>\r\n\r\n                    <Tag>Number of students</Tag>\r\n                    <Badge count={students.length} className=\"site-badge-count-4\" />\r\n                    <Button\r\n                        onClick={() => setShowDrawer(!showDrawer)}\r\n                        type=\"primary\" shape=\"round\" icon={<PlusOutlined />} size='small'>\r\n                        Add New Student\r\n                    </Button>\r\n\r\n                </>\r\n\r\n            }\r\n            pagination={{ pageSize: 50 }}\r\n            scroll={{ y: 500 }}\r\n            rowKey = {(student) => student.id}\r\n\r\n        />; </>\r\n\r\n\r\n    }\r\n\r\n    return <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider collapsible collapsed={collapsed}\r\n               onCollapse={setCollapsed}>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <Menu.Item key=\"1\" icon={<PieChartOutlined/>}>\r\n                Option 1\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<DesktopOutlined/>}>\r\n                Option 2\r\n            </Menu.Item>\r\n            <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"User\">\r\n                <Menu.Item key=\"3\">Tom</Menu.Item>\r\n                <Menu.Item key=\"4\">Bill</Menu.Item>\r\n                <Menu.Item key=\"5\">Alex</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub2\" icon={<TeamOutlined/>} title=\"Team\">\r\n                <Menu.Item key=\"6\">Team 1</Menu.Item>\r\n                <Menu.Item key=\"7\">Team 2</Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"9\" icon={<FileOutlined/>}>\r\n                Files\r\n            </Menu.Item>\r\n            </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\r\n            <Content style={{ margin: '0 16px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>User</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                    {renderStudents()}\r\n                </div>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>\r\n\r\n                <Image width={75}\r\n                       src=\"https://user-images.githubusercontent.com/41866995/187046653-0d025241-ec4e-430c-ba76-0c87b607593c.jpg\"\r\n                />\r\n            </Footer>\r\n        </Layout>\r\n    </Layout>\r\n}\r\n\r\nexport default App;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/frontend/src/App.js b/src/frontend/src/App.js
--- a/src/frontend/src/App.js	(revision 2d884b51a923a79085c1e27a584304b12f54b767)
+++ b/src/frontend/src/App.js	(date 1661732819792)
@@ -13,7 +13,7 @@
     Layout,
     Menu, Spin,
     Table, Tag,
-    Radio, Image
+    Radio, Image, Divider
 } from 'antd';
 
 import {
@@ -231,6 +231,13 @@
                 <Image width={75}
                        src="https://user-images.githubusercontent.com/41866995/187046653-0d025241-ec4e-430c-ba76-0c87b607593c.jpg"
                 />
+                <Divider>
+                    <a
+                        rel="noopener noreferrer"
+                        target="_blank"
+                        href="https://amigoscode.com/">
+                        Click to  Amigoscode</a>
+                </Divider>
             </Footer>
         </Layout>
     </Layout>
